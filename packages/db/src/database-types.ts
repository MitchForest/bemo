/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type AssessmentMode = "adaptive" | "fixed";

export type AssessmentType = "adaptive_entry" | "benchmark" | "checkpoint" | "exit_ticket";

export type AssetType =
  | "animation"
  | "audio"
  | "document"
  | "image"
  | "interactive"
  | "manipulative"
  | "other"
  | "tts_script"
  | "video";

export type AssignmentRole = "admin" | "coach" | "teacher";

export type AttemptStatus = "abandoned" | "completed" | "in_progress";

export type AuthAalLevel = "aal1" | "aal2" | "aal3";

export type AuthCodeChallengeMethod = "plain" | "s256";

export type AuthFactorStatus = "unverified" | "verified";

export type AuthFactorType = "phone" | "totp" | "webauthn";

export type AuthOauthRegistrationType = "dynamic" | "manual";

export type AuthOneTimeTokenType =
  | "confirmation_token"
  | "email_change_token_current"
  | "email_change_token_new"
  | "phone_change_token"
  | "reauthentication_token"
  | "recovery_token";

export type Domain = "math" | "reading";

export type EnrollmentStatus = "active" | "completed" | "paused" | "withdrawn";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type GradeBand = "1" | "2" | "K" | "PreK";

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type ItemType =
  | "choice_audio"
  | "choice_image"
  | "choice_text"
  | "comprehension_choice"
  | "drag_drop"
  | "phrase_reading"
  | "record_audio"
  | "short_answer"
  | "speak"
  | "tap_to_count"
  | "timer_speed_drill"
  | "trace_path";

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type LessonSectionType =
  | "assessment"
  | "collaborative"
  | "direct_instruction"
  | "guided_practice"
  | "independent_practice"
  | "reflection"
  | "reteach";

export type LessonStepKind =
  | "celebration"
  | "coach_prompt"
  | "guided_practice"
  | "independent_practice"
  | "manipulative_setup"
  | "modeling"
  | "reflection"
  | "student_action"
  | "transition";

export type MicroGameGenre = "arcade" | "creative" | "movement" | "puzzle" | "simulation" | "story";

export type ModalityType = "drag" | "tap" | "trace" | "type" | "voice";

export type Numeric = ColumnType<string, number | string, number | string>;

export type OrganizationType = "cohort" | "district" | "homeschool" | "microschool" | "school";

export type PracticeActivityType =
  | "breathing"
  | "custom"
  | "game"
  | "interactive_quiz"
  | "manipulative"
  | "movement"
  | "speed_drill"
  | "story_read";

export type Result = "correct" | "incorrect" | "partial" | "skipped";

export type RewardType = "badge" | "joy_break" | "sticker" | "time_back" | "unlockable";

export type SkillStageCode =
  | "M0_FOUNDATIONS"
  | "M1_PREK_CORE"
  | "M2_PREK_STRETCH"
  | "M3_K_CORE"
  | "M4_G1_CORE"
  | "M5_G2_EXTENSION"
  | "R0_FOUNDATIONS"
  | "R1_PREK_CORE"
  | "R2_K_PHONICS"
  | "R3_K_AUTOMATIC"
  | "R4_G1_CORE"
  | "R5_G2_EXTENSION";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export type UserRole = "admin" | "coach" | "parent" | "student";

export interface Accounts {
  access_token: string | null;
  created_at: Generated<Timestamp>;
  expires_at: Timestamp | null;
  id: Generated<string>;
  provider: string;
  provider_account_id: string;
  refresh_token: string | null;
  user_id: string;
}

export interface AppMigrations {
  id: Generated<number>;
  name: string;
  run_at: Generated<Timestamp>;
}

export interface AssessmentAttempts {
  assessment_id: string;
  completed_at: Timestamp | null;
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  mastery_skill_id: string | null;
  score: number | null;
  started_at: Generated<Timestamp>;
  status: Generated<AttemptStatus>;
  student_id: string;
  summary: Generated<Json>;
  updated_at: Generated<Timestamp>;
}

export interface AssessmentNodes {
  assessment_id: string;
  created_at: Generated<Timestamp>;
  difficulty: Generated<number>;
  id: Generated<string>;
  metadata: Generated<Json>;
  next_on_correct: Generated<Json>;
  next_on_incorrect: Generated<Json>;
  skill_id: string;
  updated_at: Generated<Timestamp>;
}

export interface AssessmentResponses {
  attempt_id: string;
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  item_id: string | null;
  latency_ms: number;
  payload: Generated<Json>;
  result: Result;
  skill_id: string;
}

export interface Assessments {
  config: Generated<Json>;
  course_id: string | null;
  created_at: Generated<Timestamp>;
  description: string | null;
  entry_skill_ids: Generated<Json>;
  id: Generated<string>;
  mode: AssessmentMode;
  title: string;
  type: AssessmentType;
  updated_at: Generated<Timestamp>;
}

export interface Assets {
  alt_text: string | null;
  created_at: Generated<Timestamp>;
  duration_ms: number | null;
  id: Generated<string>;
  locale: Generated<string>;
  metadata: Generated<Json>;
  organization_id: string | null;
  title: string;
  transcript: string | null;
  type: AssetType;
  updated_at: Generated<Timestamp>;
  uri: string;
}

export interface AuthAuditLogEntries {
  created_at: Timestamp | null;
  id: string;
  instance_id: string | null;
  ip_address: Generated<string>;
  payload: Json | null;
}

export interface AuthFlowState {
  auth_code: string;
  auth_code_issued_at: Timestamp | null;
  authentication_method: string;
  code_challenge: string;
  code_challenge_method: AuthCodeChallengeMethod;
  created_at: Timestamp | null;
  id: string;
  provider_access_token: string | null;
  provider_refresh_token: string | null;
  provider_type: string;
  updated_at: Timestamp | null;
  user_id: string | null;
}

export interface AuthIdentities {
  created_at: Timestamp | null;
  /**
   * Auth: Email is a generated column that references the optional email property in the identity_data
   */
  email: Generated<string | null>;
  id: Generated<string>;
  identity_data: Json;
  last_sign_in_at: Timestamp | null;
  provider: string;
  provider_id: string;
  updated_at: Timestamp | null;
  user_id: string;
}

export interface AuthInstances {
  created_at: Timestamp | null;
  id: string;
  raw_base_config: string | null;
  updated_at: Timestamp | null;
  uuid: string | null;
}

export interface AuthMfaAmrClaims {
  authentication_method: string;
  created_at: Timestamp;
  id: string;
  session_id: string;
  updated_at: Timestamp;
}

export interface AuthMfaChallenges {
  created_at: Timestamp;
  factor_id: string;
  id: string;
  ip_address: string;
  otp_code: string | null;
  verified_at: Timestamp | null;
  web_authn_session_data: Json | null;
}

export interface AuthMfaFactors {
  created_at: Timestamp;
  factor_type: AuthFactorType;
  friendly_name: string | null;
  id: string;
  last_challenged_at: Timestamp | null;
  phone: string | null;
  secret: string | null;
  status: AuthFactorStatus;
  updated_at: Timestamp;
  user_id: string;
  web_authn_aaguid: string | null;
  web_authn_credential: Json | null;
}

export interface AuthOauthClients {
  client_id: string;
  client_name: string | null;
  client_secret_hash: string;
  client_uri: string | null;
  created_at: Generated<Timestamp>;
  deleted_at: Timestamp | null;
  grant_types: string;
  id: string;
  logo_uri: string | null;
  redirect_uris: string;
  registration_type: AuthOauthRegistrationType;
  updated_at: Generated<Timestamp>;
}

export interface AuthOneTimeTokens {
  created_at: Generated<Timestamp>;
  id: string;
  relates_to: string;
  token_hash: string;
  token_type: AuthOneTimeTokenType;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface AuthRefreshTokens {
  created_at: Timestamp | null;
  id: Generated<Int8>;
  instance_id: string | null;
  parent: string | null;
  revoked: boolean | null;
  session_id: string | null;
  token: string | null;
  updated_at: Timestamp | null;
  user_id: string | null;
}

export interface AuthSamlProviders {
  attribute_mapping: Json | null;
  created_at: Timestamp | null;
  entity_id: string;
  id: string;
  metadata_url: string | null;
  metadata_xml: string;
  name_id_format: string | null;
  sso_provider_id: string;
  updated_at: Timestamp | null;
}

export interface AuthSamlRelayStates {
  created_at: Timestamp | null;
  flow_state_id: string | null;
  for_email: string | null;
  id: string;
  redirect_to: string | null;
  request_id: string;
  sso_provider_id: string;
  updated_at: Timestamp | null;
}

export interface AuthSchemaMigrations {
  version: string;
}

export interface AuthSessions {
  aal: AuthAalLevel | null;
  created_at: Timestamp | null;
  factor_id: string | null;
  id: string;
  ip: string | null;
  /**
   * Auth: Not after is a nullable column that contains a timestamp after which the session should be regarded as expired.
   */
  not_after: Timestamp | null;
  refreshed_at: Timestamp | null;
  tag: string | null;
  updated_at: Timestamp | null;
  user_agent: string | null;
  user_id: string;
}

export interface AuthSsoDomains {
  created_at: Timestamp | null;
  domain: string;
  id: string;
  sso_provider_id: string;
  updated_at: Timestamp | null;
}

export interface AuthSsoProviders {
  created_at: Timestamp | null;
  disabled: boolean | null;
  id: string;
  /**
   * Auth: Uniquely identifies a SSO provider according to a user-chosen resource ID (case insensitive), useful in infrastructure as code.
   */
  resource_id: string | null;
  updated_at: Timestamp | null;
}

export interface AuthUsers {
  aud: string | null;
  banned_until: Timestamp | null;
  confirmation_sent_at: Timestamp | null;
  confirmation_token: string | null;
  confirmed_at: Generated<Timestamp | null>;
  created_at: Timestamp | null;
  deleted_at: Timestamp | null;
  email: string | null;
  email_change: string | null;
  email_change_confirm_status: Generated<number | null>;
  email_change_sent_at: Timestamp | null;
  email_change_token_current: Generated<string | null>;
  email_change_token_new: string | null;
  email_confirmed_at: Timestamp | null;
  encrypted_password: string | null;
  id: string;
  instance_id: string | null;
  invited_at: Timestamp | null;
  is_anonymous: Generated<boolean>;
  /**
   * Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.
   */
  is_sso_user: Generated<boolean>;
  is_super_admin: boolean | null;
  last_sign_in_at: Timestamp | null;
  phone: Generated<string | null>;
  phone_change: Generated<string | null>;
  phone_change_sent_at: Timestamp | null;
  phone_change_token: Generated<string | null>;
  phone_confirmed_at: Timestamp | null;
  raw_app_meta_data: Json | null;
  raw_user_meta_data: Json | null;
  reauthentication_sent_at: Timestamp | null;
  reauthentication_token: Generated<string | null>;
  recovery_sent_at: Timestamp | null;
  recovery_token: string | null;
  role: string | null;
  updated_at: Timestamp | null;
}

export interface CheckChartEntries {
  badge_id: string | null;
  celebration_copy: string | null;
  chart_id: string;
  coach_only: Generated<boolean>;
  display_order: Generated<number>;
  icon_asset_id: string | null;
  id: Generated<string>;
  metadata: Generated<Json>;
  label: string | null;
  sequence: number;
  skill_id: string | null;
  skill_ids: Generated<Json>;
  statement: string;
  threshold: Generated<Json>;
}

export interface CheckCharts {
  color: string | null;
  created_at: Generated<Timestamp>;
  description: string | null;
  display_order: Generated<number>;
  domain: Generated<Domain>;
  grade_band: Generated<GradeBand>;
  icon: string | null;
  id: Generated<string>;
  organization_id: string | null;
  stage_code: SkillStageCode | null;
  title: string;
  updated_at: Generated<Timestamp>;
}

export interface CohortMembers {
  cohort_id: string;
  joined_at: Generated<Timestamp>;
  student_id: string;
}

export interface Cohorts {
  color: string | null;
  course_id: string | null;
  created_at: Generated<Timestamp>;
  grade_band: GradeBand | null;
  icon: string | null;
  id: Generated<string>;
  name: string;
  organization_id: string;
  settings: Generated<Json>;
  updated_at: Generated<Timestamp>;
}

export interface Courses {
  color: string | null;
  created_at: Generated<Timestamp>;
  estimated_minutes: number | null;
  grade_band: GradeBand | null;
  icon: string | null;
  id: Generated<string>;
  metadata: Generated<Json>;
  organization_id: string;
  slug: string;
  subject_id: string;
  summary: string | null;
  title: string;
  updated_at: Generated<Timestamp>;
}

export interface CourseUnits {
  color: string | null;
  course_id: string;
  created_at: Generated<Timestamp>;
  expected_minutes: number | null;
  icon: string | null;
  id: Generated<string>;
  sequence: Generated<number>;
  summary: string | null;
  title: string;
  updated_at: Generated<Timestamp>;
}

export interface Enrollments {
  cohort_id: string | null;
  completed_at: Timestamp | null;
  course_id: string;
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  started_at: Generated<Timestamp>;
  status: Generated<EnrollmentStatus>;
  student_id: string;
  updated_at: Generated<Timestamp>;
}

export interface EvidenceEvents {
  confidence: number | null;
  created_at: Generated<Timestamp>;
  hints_used: Generated<number>;
  id: Generated<string>;
  input_payload: Json | null;
  item_id: string | null;
  latency_ms: number;
  result: Result;
  skill_id: string;
  student_id: string;
  task_id: string | null;
}

export interface ExtensionsPgStatStatements {
  calls: Int8 | null;
  dbid: number | null;
  jit_deform_count: Int8 | null;
  jit_deform_time: number | null;
  jit_emission_count: Int8 | null;
  jit_emission_time: number | null;
  jit_functions: Int8 | null;
  jit_generation_time: number | null;
  jit_inlining_count: Int8 | null;
  jit_inlining_time: number | null;
  jit_optimization_count: Int8 | null;
  jit_optimization_time: number | null;
  local_blk_read_time: number | null;
  local_blk_write_time: number | null;
  local_blks_dirtied: Int8 | null;
  local_blks_hit: Int8 | null;
  local_blks_read: Int8 | null;
  local_blks_written: Int8 | null;
  max_exec_time: number | null;
  max_plan_time: number | null;
  mean_exec_time: number | null;
  mean_plan_time: number | null;
  min_exec_time: number | null;
  min_plan_time: number | null;
  minmax_stats_since: Timestamp | null;
  plans: Int8 | null;
  query: string | null;
  queryid: Int8 | null;
  rows: Int8 | null;
  shared_blk_read_time: number | null;
  shared_blk_write_time: number | null;
  shared_blks_dirtied: Int8 | null;
  shared_blks_hit: Int8 | null;
  shared_blks_read: Int8 | null;
  shared_blks_written: Int8 | null;
  stats_since: Timestamp | null;
  stddev_exec_time: number | null;
  stddev_plan_time: number | null;
  temp_blk_read_time: number | null;
  temp_blk_write_time: number | null;
  temp_blks_read: Int8 | null;
  temp_blks_written: Int8 | null;
  toplevel: boolean | null;
  total_exec_time: number | null;
  total_plan_time: number | null;
  userid: number | null;
  wal_bytes: Numeric | null;
  wal_fpi: Int8 | null;
  wal_records: Int8 | null;
}

export interface ExtensionsPgStatStatementsInfo {
  dealloc: Int8 | null;
  stats_reset: Timestamp | null;
}

export interface Items {
  created_at: Generated<Timestamp>;
  difficulty: number;
  encompassing_targets: Generated<Json | null>;
  id: Generated<string>;
  prompt: Json;
  randomization: Json | null;
  rubric: Json;
  skill_id: string;
  time_estimate_ms: number;
  type: ItemType;
}

export interface JoyBreaks {
  asset_ids: Generated<Json>;
  created_at: Generated<Timestamp>;
  description: string | null;
  duration_seconds: Generated<number>;
  id: Generated<string>;
  metadata: Generated<Json>;
  title: string;
  updated_at: Generated<Timestamp>;
}

export interface Lessons {
  created_at: Generated<Timestamp>;
  course_id: string;
  essential_question: string | null;
  expected_time_minutes: Generated<number>;
  focus_statement: string | null;
  id: Generated<string>;
  mood_color: string | null;
  objective: string | null;
  skill_ids: Generated<Json>;
  slug: string;
  summary: string | null;
  title: string;
  updated_at: Generated<Timestamp>;
  metadata: Generated<Json>;
  unit_id: string | null;
}

export interface LessonSections {
  expected_minutes: number | null;
  id: Generated<string>;
  instructions: Generated<Json>;
  lesson_id: string;
  media_assets: Generated<Json>;
  practice_activity_ids: Generated<Json>;
  sequence: Generated<number>;
  skill_ids: Generated<Json>;
  step_ids: Generated<Json>;
  title: string;
  type: LessonSectionType;
}

export interface LessonSteps {
  asset_ids: Generated<Json>;
  created_at: Generated<Timestamp>;
  cues: Generated<Json>;
  duration_seconds: number | null;
  id: Generated<string>;
  kind: LessonStepKind;
  metadata: Generated<Json>;
  modality: ModalityType | null;
  script: string | null;
  section_id: string;
  student_action: string | null;
  title: string | null;
  transition_to: string | null;
  updated_at: Generated<Timestamp>;
}

export interface MicroGames {
  asset_ids: Generated<Json>;
  created_at: Generated<Timestamp>;
  description: string | null;
  domain: Domain | null;
  engine_hooks: Generated<Json>;
  genre: MicroGameGenre;
  id: Generated<string>;
  io_schema: Generated<Json>;
  slug: string;
  title: string;
  ui: Generated<Json>;
  updated_at: Generated<Timestamp>;
}

export interface MotivationRewards {
  asset_ids: Generated<Json>;
  created_at: Generated<Timestamp>;
  description: string | null;
  icon: string | null;
  id: Generated<string>;
  metadata: Generated<Json>;
  threshold: Generated<number>;
  title: string;
  track_id: string | null;
  type: RewardType;
  updated_at: Generated<Timestamp>;
}

export interface MotivationTracks {
  cadence: Generated<string>;
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  organization_id: string | null;
  target_xp: Generated<number>;
  title: string;
  updated_at: Generated<Timestamp>;
}

export interface Organizations {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  name: string;
  settings: Generated<Json>;
  slug: string;
  type: OrganizationType;
  updated_at: Generated<Timestamp>;
}

export interface ParentStudents {
  parent_id: string;
  student_id: string;
}

export interface PracticeActivities {
  asset_ids: Generated<Json>;
  config: Generated<Json>;
  created_at: Generated<Timestamp>;
  description: string | null;
  difficulty_band: string | null;
  expected_minutes: number | null;
  id: Generated<string>;
  micro_game_id: string | null;
  modalities: Generated<Json>;
  purposes: Generated<Json>;
  sensory_tags: Generated<Json>;
  skill_id: string | null;
  title: string;
  type: PracticeActivityType;
  updated_at: Generated<Timestamp>;
}

export interface RealtimeMessages {
  event: string | null;
  extension: string;
  id: Generated<string>;
  inserted_at: Generated<Timestamp>;
  payload: Json | null;
  private: Generated<boolean | null>;
  topic: string;
  updated_at: Generated<Timestamp>;
}

export interface RealtimeSchemaMigrations {
  inserted_at: Timestamp | null;
  version: Int8;
}

export interface RealtimeSubscription {
  claims: Json;
  claims_role: Generated<string>;
  created_at: Generated<Timestamp>;
  entity: string;
  filters: Generated<string[]>;
  id: Generated<Int8>;
  subscription_id: string;
}

export interface Sessions {
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: string;
  user_id: string;
}

export interface SkillEncompassing {
  child_skill_id: string;
  parent_skill_id: string;
  weight: Generated<number>;
}

export interface SkillMetrics {
  accuracy_sq_sum: Generated<number>;
  accuracy_sum: Generated<number>;
  latency_sq_sum: Generated<number>;
  latency_sum: Generated<number>;
  sample_count: Generated<number>;
  segment_kind: string;
  segment_value: string;
  skill_id: string;
  updated_at: Generated<Timestamp>;
}

export interface SkillPrerequisites {
  gate: Generated<string>;
  prerequisite_skill_id: string;
  skill_id: string;
}

export interface Skills {
  assets: Generated<Json | null>;
  check_chart_tags: Generated<Json | null>;
  course_id: string | null;
  created_at: Generated<Timestamp>;
  description: string | null;
  domain: Domain;
  expected_time_seconds: number;
  grade_band: GradeBand;
  id: Generated<string>;
  interference_group: string | null;
  lesson_id: string | null;
  stage_code: SkillStageCode | null;
  strand: string;
  subject_id: string | null;
  title: string;
  updated_at: Generated<Timestamp>;
}

export interface SkillTaskTemplates {
  created_at: Generated<Timestamp>;
  definition: Generated<Json>;
  estimated_minutes: Generated<number>;
  id: string;
  intent: string;
  metadata: Generated<Json>;
  modalities: Generated<Json>;
  sensory_tags: Generated<Json>;
  skill_id: string;
  title: string;
  updated_at: Generated<Timestamp>;
  xp_award: Generated<number>;
}

export interface StaffAssignments {
  cohort_id: string | null;
  course_id: string | null;
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  role: AssignmentRole;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface StorageBuckets {
  allowed_mime_types: string[] | null;
  avif_autodetection: Generated<boolean | null>;
  created_at: Generated<Timestamp | null>;
  file_size_limit: Int8 | null;
  id: string;
  name: string;
  /**
   * Field is deprecated, use owner_id instead
   */
  owner: string | null;
  owner_id: string | null;
  public: Generated<boolean | null>;
  updated_at: Generated<Timestamp | null>;
}

export interface StorageMigrations {
  executed_at: Generated<Timestamp | null>;
  hash: string;
  id: number;
  name: string;
}

export interface StorageObjects {
  bucket_id: string | null;
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  last_accessed_at: Generated<Timestamp | null>;
  metadata: Json | null;
  name: string | null;
  /**
   * Field is deprecated, use owner_id instead
   */
  owner: string | null;
  owner_id: string | null;
  path_tokens: Generated<string[] | null>;
  updated_at: Generated<Timestamp | null>;
  user_metadata: Json | null;
  version: string | null;
}

export interface StorageS3MultipartUploads {
  bucket_id: string;
  created_at: Generated<Timestamp>;
  id: string;
  in_progress_size: Generated<Int8>;
  key: string;
  owner_id: string | null;
  upload_signature: string;
  user_metadata: Json | null;
  version: string;
}

export interface StorageS3MultipartUploadsParts {
  bucket_id: string;
  created_at: Generated<Timestamp>;
  etag: string;
  id: Generated<string>;
  key: string;
  owner_id: string | null;
  part_number: number;
  size: Generated<Int8>;
  upload_id: string;
  version: string;
}

export interface Students {
  birth_date: Timestamp | null;
  created_at: Generated<Timestamp>;
  grade: string;
  id: Generated<string>;
  motivation_profile: Generated<Json | null>;
  name: string;
  settings: Generated<Json | null>;
  updated_at: Generated<Timestamp>;
  user_id: string | null;
}

export interface StudentSkillStates {
  avg_latency_ms: number | null;
  created_at: Generated<Timestamp>;
  due_at: Timestamp;
  easiness: number | null;
  last_seen_at: Timestamp | null;
  overdue_days: Generated<number>;
  rep_num: Generated<number>;
  retention_probability_365: Generated<number>;
  skill_id: string;
  speed_factor: Generated<number>;
  stability: Generated<number>;
  strength: Generated<number>;
  struggling_flag: Generated<boolean>;
  student_id: string;
  task_template_tallies: Generated<Json>;
  updated_at: Generated<Timestamp>;
}

export interface StudentStats {
  current_streak: Generated<number>;
  last_active_at: Timestamp | null;
  longest_streak: Generated<number>;
  skills_completed: Generated<number>;
  speed_drills_completed: Generated<number>;
  student_id: string;
  total_minutes: Generated<number>;
  total_xp: Generated<number>;
  updated_at: Generated<Timestamp>;
  weekly_xp: Generated<Json | null>;
}

export interface Subjects {
  color: string | null;
  created_at: Generated<Timestamp>;
  description: string | null;
  domain: Domain;
  icon: string | null;
  id: Generated<string>;
  organization_id: string;
  slug: string;
  title: string;
  updated_at: Generated<Timestamp>;
}

export interface Users {
  created_at: Generated<Timestamp>;
  email: string;
  id: Generated<string>;
  name: string;
  profile_id: string | null;
  role: Generated<UserRole>;
  updated_at: Generated<Timestamp>;
}

export interface VaultDecryptedSecrets {
  created_at: Timestamp | null;
  decrypted_secret: string | null;
  description: string | null;
  id: string | null;
  key_id: string | null;
  name: string | null;
  nonce: Buffer | null;
  secret: string | null;
  updated_at: Timestamp | null;
}

export interface VaultSecrets {
  created_at: Generated<Timestamp>;
  description: Generated<string>;
  id: Generated<string>;
  key_id: string | null;
  name: string | null;
  nonce: Generated<Buffer | null>;
  secret: string;
  updated_at: Generated<Timestamp>;
}

export interface StudentLeagueMemberships {
  joined_at: Generated<Timestamp>;
  league_id: string;
  squad_id: string | null;
  student_id: string;
}

export interface StudentQuests {
  quests: Generated<Json>;
  student_id: string;
  updated_at: Generated<Timestamp>;
}

export interface TimeBackLedger {
  consumed_at: Timestamp | null;
  expires_at: Timestamp | null;
  granted_at: Generated<Timestamp>;
  id: Generated<string>;
  minutes_granted: Generated<number>;
  note: string | null;
  source: string;
  student_id: string;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  accounts: Accounts;
  app_migrations: AppMigrations;
  assessment_attempts: AssessmentAttempts;
  assessment_nodes: AssessmentNodes;
  assessment_responses: AssessmentResponses;
  assessments: Assessments;
  assets: Assets;
  "auth.audit_log_entries": AuthAuditLogEntries;
  "auth.flow_state": AuthFlowState;
  "auth.identities": AuthIdentities;
  "auth.instances": AuthInstances;
  "auth.mfa_amr_claims": AuthMfaAmrClaims;
  "auth.mfa_challenges": AuthMfaChallenges;
  "auth.mfa_factors": AuthMfaFactors;
  "auth.oauth_clients": AuthOauthClients;
  "auth.one_time_tokens": AuthOneTimeTokens;
  "auth.refresh_tokens": AuthRefreshTokens;
  "auth.saml_providers": AuthSamlProviders;
  "auth.saml_relay_states": AuthSamlRelayStates;
  "auth.schema_migrations": AuthSchemaMigrations;
  "auth.sessions": AuthSessions;
  "auth.sso_domains": AuthSsoDomains;
  "auth.sso_providers": AuthSsoProviders;
  "auth.users": AuthUsers;
  check_chart_entries: CheckChartEntries;
  check_charts: CheckCharts;
  cohort_members: CohortMembers;
  cohorts: Cohorts;
  course_units: CourseUnits;
  courses: Courses;
  enrollments: Enrollments;
  evidence_events: EvidenceEvents;
  "extensions.pg_stat_statements": ExtensionsPgStatStatements;
  "extensions.pg_stat_statements_info": ExtensionsPgStatStatementsInfo;
  items: Items;
  joy_breaks: JoyBreaks;
  lesson_sections: LessonSections;
  lesson_steps: LessonSteps;
  lessons: Lessons;
  micro_games: MicroGames;
  motivation_rewards: MotivationRewards;
  motivation_tracks: MotivationTracks;
  organizations: Organizations;
  parent_students: ParentStudents;
  practice_activities: PracticeActivities;
  "realtime.messages": RealtimeMessages;
  "realtime.schema_migrations": RealtimeSchemaMigrations;
  "realtime.subscription": RealtimeSubscription;
  sessions: Sessions;
  skill_encompassing: SkillEncompassing;
  skill_metrics: SkillMetrics;
  skill_prerequisites: SkillPrerequisites;
  skill_task_templates: SkillTaskTemplates;
  skills: Skills;
  staff_assignments: StaffAssignments;
  "storage.buckets": StorageBuckets;
  "storage.migrations": StorageMigrations;
  "storage.objects": StorageObjects;
  "storage.s3_multipart_uploads": StorageS3MultipartUploads;
  "storage.s3_multipart_uploads_parts": StorageS3MultipartUploadsParts;
  student_league_memberships: StudentLeagueMemberships;
  student_quests: StudentQuests;
  student_skill_states: StudentSkillStates;
  student_stats: StudentStats;
  students: Students;
  subjects: Subjects;
  time_back_ledger: TimeBackLedger;
  users: Users;
  "vault.decrypted_secrets": VaultDecryptedSecrets;
  "vault.secrets": VaultSecrets;
}
